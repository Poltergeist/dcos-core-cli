name: Build binary
on: [pull_request]
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform_name: linux
            python_version: 3.7
            env_bindir: bin
            sudo: sudo
          - os: macos-latest
            platform_name: darwin
            python_version: 3.7
            env_bindir: bin
            sudo: sudo
          - os: windows-latest
            platform_name: windows
            python_version: 3.5
            env_bindir: Scripts
            sudo: ""
    runs-on: ${{matrix.os}}
    name: Build and publish binary
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13.4'
      - uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python_version}}
      - name: Get golangci-lint
        run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | ${{matrix.sudo}} sh -s -- -b /usr/local/bin v1.21.0
        shell: bash
      - name: Build Go binary
        run: make ${{matrix.platform_name}}
        env:
          NO_DOCKER: 1
      - name: Build Python binary
        run: cd python/lib/dcoscli && make binary && mkdir -p ../../../build/${{matrix.platform_name}}/python && cp dist/dcos ../../../build/${{matrix.platform_name}}/python
        shell: bash
      - name: Run Go tests
        if: matrix.os == 'ubuntu-latest'
        run: make test
        env:
          NO_DOCKER: 1
      - name: Run lib tests
        run: cd python/lib/dcos && make env && ./env/${{matrix.env_bindir}}/tox -e py-syntax && ./env/${{matrix.env_bindir}}/tox -e py-unit
        shell: bash
      - name: Run cli tests
        run: cd python/lib/dcoscli && make env && ./env/${{matrix.env_bindir}}/tox -e py-syntax
        shell: bash
#      - name: Publish plugins
#        run: cd scripts && pip install --upgrade pip==18.1 setuptools && pip install -r requirements.txt && ./publish_plugins.py ${{matrix.platform_name}}
#        shell: bash
#        env:
#          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
#          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
